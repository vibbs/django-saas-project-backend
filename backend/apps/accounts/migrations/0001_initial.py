# Generated by Django 5.2.4 on 2025-07-27 11:53

import apps.accounts.enums
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('organizations', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extended_properties', models.JSONField(blank=True, default=dict)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=30)),
                ('last_name', models.CharField(blank=True, max_length=30)),
                ('avatar', models.URLField(blank=True, null=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('bio', models.TextField(blank=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(choices=[(apps.accounts.enums.GenderTypes['MALE'], 'MALE'), (apps.accounts.enums.GenderTypes['FEMALE'], 'FEMALE'), (apps.accounts.enums.GenderTypes['OTHER'], 'OTHER'), (apps.accounts.enums.GenderTypes['UNKNOWN'], 'UNKNOWN')], default=apps.accounts.enums.GenderTypes['UNKNOWN'], max_length=10)),
                ('role', models.CharField(choices=[(apps.accounts.enums.UserRoleTypes['ADMIN'], 'ADMIN'), (apps.accounts.enums.UserRoleTypes['USER'], 'USER'), (apps.accounts.enums.UserRoleTypes['GUEST'], 'guest')], default=apps.accounts.enums.UserRoleTypes['USER'], max_length=10)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_2fa_enabled', models.BooleanField(default=False)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('status', models.CharField(choices=[(apps.accounts.enums.UserStatusTypes['ACTIVE'], 'ACTIVE'), (apps.accounts.enums.UserStatusTypes['INACTIVE'], 'INACTIVE'), (apps.accounts.enums.UserStatusTypes['SUSPENDED'], 'SUSPENDED'), (apps.accounts.enums.UserStatusTypes['DELETED'], 'DELETED'), (apps.accounts.enums.UserStatusTypes['BANNED'], 'BANNED'), (apps.accounts.enums.UserStatusTypes['PENDING'], 'PENDING')], default=apps.accounts.enums.UserStatusTypes['ACTIVE'], max_length=10)),
                ('is_org_admin', models.BooleanField(default=False)),
                ('is_org_creator', models.BooleanField(default=False)),
                ('can_invite_users', models.BooleanField(default=False)),
                ('can_manage_billing', models.BooleanField(default=False)),
                ('can_delete_org', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Account',
                'verbose_name_plural': 'Accounts',
                'ordering': ['-date_joined'],
                'unique_together': {('organization', 'email')},
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extended_properties', models.JSONField(blank=True, default=dict)),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(unique=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='teams', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team',
                'verbose_name_plural': 'Teams',
                'ordering': ['name'],
                'unique_together': {('organization', 'user', 'slug')},
            },
        ),
        migrations.CreateModel(
            name='AccountAuthProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extended_properties', models.JSONField(blank=True, default=dict)),
                ('provider', models.CharField(max_length=50)),
                ('provider_user_id', models.CharField(max_length=255)),
                ('email', models.EmailField(max_length=254)),
                ('linked_at', models.DateTimeField(auto_now_add=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='auth_providers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('provider', 'provider_user_id')},
            },
        ),
        migrations.CreateModel(
            name='TeamMembership',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('extended_properties', models.JSONField(blank=True, default=dict)),
                ('role', models.CharField(choices=[(apps.accounts.enums.TeamRoleTypes['ADMIN'], 'ADMIN'), (apps.accounts.enums.TeamRoleTypes['MEMBER'], 'MEMBER'), (apps.accounts.enums.TeamRoleTypes['VIEWER'], 'VIEWER')], default=apps.accounts.enums.TeamRoleTypes['MEMBER'], max_length=50)),
                ('joined_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='%(class)s_set', to='organizations.organization')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='members', to='accounts.team')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='updated_%(class)s_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Team Membership',
                'verbose_name_plural': 'Team Memberships',
                'unique_together': {('organization', 'user', 'team')},
            },
        ),
    ]
