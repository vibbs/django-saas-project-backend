services:
  web:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: gunicorn config.wsgi:application --reload --bind 0.0.0.0:8000
    volumes:
      - ..:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
    env_file:
      - ../.env
    restart: always
    networks:
      - d-saas-network

  db:
    image: postgres:16-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_DB: ${DB_NAME:-saas_db}
      POSTGRES_USER: ${DB_USER:-saas_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-saas_password}
    restart: always
    ports:
      - "5433:5432" # Exposing PostgreSQL on port 5433
    env_file:
      - ../.env
    networks:
      - d-saas-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - d-saas-network

  celery_worker:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: celery -A config.celery worker -l info
    volumes:
      - ..:/app
    env_file:
      - ../.env
    depends_on:
      - redis
    networks:
      - d-saas-network

  celery_beat:
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    command: celery -A config.celery beat -l info
    volumes:
      - ..:/app
    env_file:
      - ../.env
    depends_on:
      - redis
    networks:
      - d-saas-network

volumes:
  postgres_data:
  redis_data:

networks:
  d-saas-network:
    driver: bridge
